name: Design Tokens Release

on:
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Check for changeset files
        id: check-changeset
        run: |
          if ls .changeset/*.md 1> /dev/null 2>&1; then
            echo "has-changeset=true" >> $GITHUB_OUTPUT
          else
            echo "has-changeset=false" >> $GITHUB_OUTPUT
          fi

      - name: No changeset files found
        if: steps.check-changeset.outputs.has-changeset == 'false'
        run: echo "No changeset files found, skipping version update"

      - name: Run changeset version
        if: steps.check-changeset.outputs.has-changeset == 'true'
        run: npm run version-all

      - name: Install dependencies after version update
        if: steps.check-changeset.outputs.has-changeset == 'true'
        run: pnpm install

      - name: Get current version
        if: steps.check-changeset.outputs.has-changeset == 'true'
        id: get-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.check-changeset.outputs.has-changeset == 'true'
        run: |
          echo "Committing and pushing changes..."
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github'
          git add .
          VERSION="${{ steps.get-version.outputs.version }}"
          git commit -m "\$VERSION\ release" || exit 0
          git push

      - name: Merge release into main
        if: steps.check-changeset.outputs.has-changeset == 'true'
        run: |
          git fetch origin main
          git checkout main
          git merge --no-ff ${{ github.ref_name }}
          git push origin main

      - name: tagging
        if: steps.check-changeset.outputs.has-changeset == 'true'
        run: |
          git tag -a -m "${{ steps.get-version.outputs.version }}" ${{ steps.get-version.outputs.version }}
          git push origin ${{ steps.get-version.outputs.version }}